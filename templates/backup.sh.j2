# Managed by Ansible, please don't edit manually
#!/bin/sh

set -euo pipefail

# -----------------------------------------------------------------------------
# Configuration
# -----------------------------------------------------------------------------

export BORG_REPO={{ borgbackup_borg_repo }}
export BORG_RELOCATED_REPO_ACCESS_IS_OK=no
export BORG_UNKNOWN_UNENCRYPTED_REPO_ACCESS_IS_OK=yes

LOG() {
    echo "[$(date --iso-8601=seconds)] $*"
}

DATE="$(hostname)-$(date --iso-8601)"
LOG "Starting backup for ${DATE}"

# -----------------------------------------------------------------------------
# Backup
# -----------------------------------------------------------------------------

run_backup() {
    borg create \
        --verbose \
        --list \
        --stats \
        --show-rc \
        --one-file-system \
        --progress \
        --compression lz4 \
        --exclude-caches \
        --patterns-from /etc/backups/borgPatterns.lst \
        ::'{hostname}-{now}'
    return $?
}

# -----------------------------------------------------------------------------
# Prune
# -----------------------------------------------------------------------------

run_prune() {
    borg prune \
        --list \
        --glob-archives '{hostname}-*' \
        --show-rc \
        --keep-daily    {{ borgbackup_options.keep_daily }} \
        --keep-weekly   {{ borgbackup_options.keep_weekly }} \
        --keep-monthly  {{ borgbackup_options.keep_monthly }}
    return $?
}

# -----------------------------------------------------------------------------
# Compact
# -----------------------------------------------------------------------------

run_compact() {
    borg compact
    return $?
}

# -----------------------------------------------------------------------------
# Execute and Evaluate
# -----------------------------------------------------------------------------

backup_exit=0
prune_exit=0
compact_exit=0

run_backup || backup_exit=$?
run_prune  || prune_exit=$?
run_compact || compact_exit=$?

# Determine global exit status
global_exit=$((backup_exit > prune_exit ? backup_exit : prune_exit))
global_exit=$((compact_exit > global_exit ? compact_exit : global_exit))

case $global_exit in
    0)
        LOG "Backup, Prune, and Compact finished successfully."
        ;;
    1)
        LOG "Backup, Prune, and/or Compact finished with warnings."
        ;;
    *)
        LOG "Backup, Prune, and/or Compact finished with errors."
        ;;
esac

exit $global_exit
